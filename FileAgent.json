{
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -112,
        -272
      ],
      "id": "9b90650b-22e1-42f0-8ae7-f8a3819701b1",
      "name": "When chat message received",
      "webhookId": "e0040182-0c30-4abc-ab98-70971bec800f"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output || $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "You are a AI agent and you have access to the following tools : \n\n---\nTools Available : \n- CreateFile : Creates a file. Valid usage is to create a file with a valid extension.\n- OverWriteFile : Overwrite the file with new content.\n- CreateDirectory : Create a directory\n- GetFileList : Returns all the files in the mentioned directory (/home/node buy default). Note : This will also return the directories.\n- GetFullFileContent : This will return the full content of the file. You must specify the full path if you want expected result.\n- ExecuteNPMCommands : Run any npm command.\n---\n\nYou are to efficiently use the tools available to you to alter the files. Think about what the prompt wants and also think about what tools will be best for what use case. ",
          "maxIterations": 100
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        560,
        -176
      ],
      "id": "bc8c480e-0eb0-4192-96a0-987519989f37",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {
          "topP": 0.8
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        336,
        48
      ],
      "id": "a81de57d-fc30-4ff1-ac62-5387279bb9b6",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "QQwyLuKjC5UDqltC",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Enter the name of the file to create a file with that name and extension. The format is : \nname.extension. This will create a file using the touch command",
        "command": "=touch {{ $fromAI('Command', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.executeCommandTool",
      "typeVersion": 1,
      "position": [
        464,
        48
      ],
      "id": "0e16572e-5921-4d4a-aa67-0c5046a1b008",
      "name": "CreateFile"
    },
    {
      "parameters": {
        "toolDescription": "Execute this to write contents to a file. \nNote :\n- The directory must exists. If it doesnt this will give you an error. So make sure you create the directory using the appropriate tool.\n- this has to be of the format : \n\nfullPath/filename.extension\nContent You want to write to file \n\nExample : \n\nindex.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>My Sample Page</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f0f4f8;\n      padding: 2rem;\n    }\n    h1 {\n      color: #2b6cb0;\n    }\n    p {\n      color: #4a5568;\n    }\n  </style>\n</head>\n<body>\n  <h1>Hello, World! ðŸ‘‹</h1>\n  <p>This is a sample HTML page written using a shell script and heredoc.</p>\n</body>\n</html>",
        "command": "=cat << 'EOF' > {{ $fromAI('Command', ``, 'string') }}\nEOF"
      },
      "type": "n8n-nodes-base.executeCommandTool",
      "typeVersion": 1,
      "position": [
        592,
        48
      ],
      "id": "8c4e8d1b-96a5-4548-b9e6-cb89006a6dae",
      "name": "OverWriteFile"
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to make directories. Give the full path of the directory. \n\nNote : This is using the mkdir command. You only need to mention the directlry",
        "command": "=mkdir {{ $fromAI('Command', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.executeCommandTool",
      "typeVersion": 1,
      "position": [
        720,
        48
      ],
      "id": "a6d12f1a-bc8e-4530-bb41-35586f9fcec4",
      "name": "CreateDirectory"
    },
    {
      "parameters": {
        "toolDescription": "This will give the list of all the files in the current working directory by default. \nNote : \n- If you want any other directory, Mention the path of the directory you want.",
        "command": "=ls {{ $fromAI('Command', ``, 'string') }} -a"
      },
      "type": "n8n-nodes-base.executeCommandTool",
      "typeVersion": 1,
      "position": [
        848,
        48
      ],
      "id": "f2082783-6ec8-41a2-bb49-c377d1fac5f2",
      "name": "GetFileList"
    },
    {
      "parameters": {
        "toolDescription": "This tool will give you the full content of the files for which the path you have given.\n\nNote : You must give the full path of the file you want.",
        "command": "=cat {{ $fromAI('Command', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.executeCommandTool",
      "typeVersion": 1,
      "position": [
        976,
        48
      ],
      "id": "f48e0b74-9230-4c43-b5a5-ba5a5a054caa",
      "name": "GetFullFileContent"
    },
    {
      "parameters": {
        "command": "={{ (() => {\n  const ts = new Date().toISOString().replace(/[-:TZ.]/g, '');\n  return `npm create vite@latest my-app-${ts} -- --template react --yes && cd my-app-${ts}`;\n})() }}\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        112,
        -272
      ],
      "id": "98f89361-f325-42d3-bc95-f6db4549287e",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "output"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        112,
        -80
      ],
      "id": "44e09a23-46a0-4f6d-830f-880e906257dc",
      "name": "When Executed by Another Workflow"
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "CreateFile": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OverWriteFile": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CreateDirectory": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetFileList": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetFullFileContent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8f16d46c7bec5d39bcd76757b993329682b1463313122ab493ab184891c98fce"
  }
}
